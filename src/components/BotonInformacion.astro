---
interface Props {
  ContentId?: string;
}

const { ContentId } = Astro.props;

/* const contentData = await fetch(`${Astro.url.origin}/api/${ContentId}`).then(
  (response) => response.json()
);
console.log(contentData,"data");
console.log(ContentId); */

/* const { data } = Astro.props; */
---

<a
  class="flex flex-row scale-75 gap-4 p-4 bg-white/20 rounded-md items-center hover:scale-90 hover:opacity-90 duration-300 transition-all cursor-pointer"
  href=`/info/${ContentId}`
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="text-gray-300"
    width="40"
    height="40"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="CurrentColor"
    fill="none"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0"></path>
    <path d="M12 9h.01"></path>
    <path d="M11 12h1v4h1"></path>
  </svg>

  <span class="text-gray-300 text-lg font-bold flex justify-center items-center">   Más Información</span>
</a>
